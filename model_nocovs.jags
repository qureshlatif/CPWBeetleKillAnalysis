model {
  
  # prior distributions
  
  # parameter correlation
  
  rho.ab ~ dunif(-1,1)
  rho.bd ~ dunif(-1,1)
  
  # mean and precison for the parameter intercepts
  
  t.nu <- 7.763179      # Uniform prior
  t.sigma <- 1.566267   # Uniform prior

  alpha0 ~  dt(0, pow(t.sigma, -2), t.nu)
  tvar.sigma.a0 ~ dt(0,1,1)  # Cauchy distribution
  sigma.a0 <- abs(tvar.sigma.a0)  # half-Cauchy distribution
  
  beta0 ~ dt(0, pow(t.sigma, -2), t.nu)
  tvar.sigma.b0 ~ dt(0,1,1)  # Cauchy distribution
  sigma.b0 <- abs(tvar.sigma.b0)  # half-Cauchy distribution
  
  delta0 ~ dt(0, pow(t.sigma, -2), t.nu)
  tvar.sigma.d0 ~ dt(0,1,1)  # Cauchy distribution
  sigma.d0 <- abs(tvar.sigma.d0)  # half-Cauchy distribution
  
  # metacommunity parameter
  omega ~ dunif(0,1)

  for (i in 1:n.spp) {
    d0[i] ~ dnorm(delta0, pow(sigma.d0,-2))
    b0[i] ~ dnorm(beta0 + (rho.bd*sigma.b0/sigma.d0)*(d0[i] - delta0),  pow(sigma.b0,-2)/(1 - pow(rho.bd,2)))
    a0[i] ~ dnorm(alpha0 + (rho.ab*sigma.a0/sigma.b0)*(b0[i] - beta0),  pow(sigma.a0,-2)/(1 - pow(rho.ab,2)))

    # state processes
    w[i] ~ dbern(omega)
    for (k in 1:n.grid) {
      logit(psi[k, i]) <- d0[i]
      z[k, i] ~ dbern(psi[k, i]*w[i])
    }

    for(j in 1:n.point) {
      logit(theta[j, i]) <- b0[i]
      u[j, i] ~ dbern(theta[j, i]*z[gridID[j], i])
      
      logit(p[j, i]) <- a0[i]
      Y[j, i] ~ dbinom(p[j, i]*u[j, i], TPeriod[j, i])
    }
  }
}
