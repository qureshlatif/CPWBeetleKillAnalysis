      model{
      
      # Need to supply:
        # Y, area.band, area.prop, breaks, dclass, nG, nInd, nPoint, gridID, nGrid
        # add later # detection covariates: Time.b, DOY.b, ccov.b, shcov.b 
        # add later # point-level abundance covariates: PctDead.b, ...
      
      # Prior on theta
      theta.mn ~ dunif(0, 1000)
      theta2 <- pow(theta.mn, 2)

      # Priors on psi and lambda
      beta0.mean ~ dnorm(0, 0.1)
      beta0.sd ~ dunif(0, 10)
      beta0.tau <- pow(beta0.sd, -2)
      for(g in 1:nGrid) {
        beta0[g] ~ dnorm(beta0.mean, beta0.tau)
      }

      ### Point-level loop
      for(j in 1:nPoint) {
        ## Abundance model
        log(lambda[j]) <- beta0[gridID[j]] # Add point-level abundance covariates here
        N[j] ~ dpois(lambda[j])
        Y[j] ~ dbin(pcap[j], N[j]) # Observation model
        
        ## Detection parameters
        for(k in 1:nG) {
          p[j, k] <- p0[k]
          pi[j, k] <- p[j, k] * area.prop[k]
          pic[j, k] <- pi[j, k] / pcap[j]
        }
        pcap[j] <- sum(pi[j, ])
      }
      
      ### Multi-nomial portion of detection model (Loop over detected individuals)
      for(i in 1:nInd) { # multi-nomial portion of detection model
        dclass[i, 1] ~ dcat(pic[dclass[i, 2], 1:nG])
      }

      ### Detection intercept (pooled across sites within distance bins)
      for(k in 1:nG) {
        int[k] <- theta2 * (1 - exp(-pow(breaks[k + 1], 2)/(2 * theta2))) - theta2 * (1 - exp(-pow(breaks[k], 2)/(2 * theta2)))
        p0[k] <- 2 * 3.141593 * int[k] / area.band[k]
      }
      
      ### Derived parameters
      N.mean <- sum(N[]) / nPoint
      p.mean <- sum(pcap) / nPoint

  ## Rest of this from Adam. Not sure if I need it yet.
  #   N.pred ~ dmulti(pic, MSE.n)
  #   for(k in 1:nG) {
  #     N.exp[k] <- MSE.n * pic[k]
  #     N.pred.SqEr[k] <- pow(N.pred[k] - N.exp[k], 2)
  #     N.obs.SqEr[k] <- pow(det.MSE[k] - N.exp[k], 2)
  #   }
  #   N.pred.MSE <- mean(N.pred.SqEr)
  #   N.obs.MSE <- mean(N.obs.SqEr)
  }
