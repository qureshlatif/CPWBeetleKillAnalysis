model {
  
  # prior distributions
  
  # parameter correlation
  
  rho.ab ~ dunif(-1,1)
  rho.bd ~ dunif(-1,1)
  
  # mean and precison for the parameter intercepts
  t.nu <- 7.763179      # Uniform prior
  t.sigma <- 1.566267   # Uniform prior

  alpha0 ~  dt(0, pow(t.sigma, -2), t.nu)
  sigma.a0 ~ dunif(0, 10)  # More restrictive alternative
  
  beta0 ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.b0 ~ dunif(0, 10)  # More restrictive alternative
  
  delta0 ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.d0 ~ dunif(0, 10)  # More restrictive alternative
  
  # metacommunity parameter
  omega ~ dunif(0,1)

  # covariates for theta (b)
  Betab.RCovAS ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.RCovAS ~ dunif(0, 10)  # More restrictive alternative

  Betab.RCovES ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.RCovES ~ dunif(0, 10)  # More restrictive alternative

  Betab.RCovPine ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.RCovPine ~ dunif(0, 10)  # More restrictive alternative

  Betab.CanCov ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.CanCov ~ dunif(0, 10)  # More restrictive alternative

  Betab.ShCov ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.ShCov ~ dunif(0, 10)  # More restrictive alternative

  Betab.RSC_Con ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.RSC_Con ~ dunif(0, 10)  # More restrictive alternative

  Betab.GHerb ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.GHerb ~ dunif(0, 10)  # More restrictive alternative

  Betab.Gwoody ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.Gwoody ~ dunif(0, 10)  # More restrictive alternative

  Betab.GDD ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betab.GDD ~ dunif(0, 10)  # More restrictive alternative

  # covariates for p (a)
  Betaa.Time ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betaa.Time ~ dunif(0, 10)  # More restrictive alternative

  Betaa.Time2 ~ dt(0, pow(t.sigma, -2), t.nu) # Possibly drop quadratics here.
  sigma.Betaa.Time2 ~ dunif(0, 10)  # More restrictive alternative

  Betaa.DOY ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betaa.DOY ~ dunif(0, 10)  # More restrictive alternative

  Betaa.DOY2 ~ dt(0, pow(t.sigma,-2), t.nu)
  sigma.Betaa.DOY2 ~ dunif(0, 10)  # More restrictive alternative

  Betaa.CCov ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betaa.CCov ~ dunif(0, 10)  # More restrictive alternative

  Betaa.SHCov ~ dt(0, pow(t.sigma, -2), t.nu)
  sigma.Betaa.SHCov ~ dunif(0, 10)  # More restrictive alternative

  for (i in 1:n.spp) {
    d0[i] ~ dnorm(delta0, pow(sigma.d0,-2))
    b0[i] ~ dnorm(beta0 + (rho.bd*sigma.b0/sigma.d0)*(d0[i] - delta0),  pow(sigma.b0,-2)/(1 - pow(rho.bd,2)))
    a0[i] ~ dnorm(alpha0 + (rho.ab*sigma.a0/sigma.b0)*(b0[i] - beta0),  pow(sigma.a0,-2)/(1 - pow(rho.ab,2)))

    # covariates for theta (b)
    bb.RCovAS[i] ~ dnorm(Betab.RCovAS, pow(sigma.Betab.RCovAS, -2))
    bb.RCovES[i] ~ dnorm(Betab.RCovES, pow(sigma.Betab.RCovES, -2))
    bb.RCovPine[i] ~ dnorm(Betab.RCovPine, pow(sigma.Betab.RCovPine, -2))
    bb.CanCov[i] ~ dnorm(Betab.CanCov, pow(sigma.Betab.CanCov, -2))
    bb.ShCov[i] ~ dnorm(Betab.ShCov, pow(sigma.Betab.ShCov, -2))
    bb.RSC_Con[i] ~ dnorm(Betab.RSC_Con, pow(sigma.Betab.RSC_Con, -2))
    bb.GHerb[i] ~ dnorm(Betab.GHerb, pow(sigma.Betab.GHerb, -2))
    bb.Gwoody[i] ~ dnorm(Betab.Gwoody, pow(sigma.Betab.Gwoody, -2))
    bb.GDD[i] ~ dnorm(Betab.GDD, pow(sigma.Betab.GDD, -2))

    # covariates for p (a)
    ba.Time[i] ~ dnorm(Betaa.Time, pow(sigma.Betaa.Time, -2))
    ba.Time2[i] ~ dnorm(Betaa.Time2, pow(sigma.Betaa.Time2, -2))
    ba.DOY[i] ~ dnorm(Betaa.DOY, pow(sigma.Betaa.DOY, -2))
    ba.DOY2[i] ~ dnorm(Betaa.DOY2, pow(sigma.Betaa.DOY2, -2))
    ba.ccov[i] ~ dnorm(Betaa.CCov, pow(sigma.Betaa.CCov, -2))
    ba.shcov[i] ~ dnorm(Betaa.SHCov, pow(sigma.Betaa.SHCov, -2))

    # state processes
    w[i] ~ dbern(omega)
    for (k in 1:n.grid) {
      logit(psi[k, i]) <- d0[i]
      z[k, i] ~ dbern(psi[k, i]*w[i])
    }

    for(j in 1:n.point) {
      logit(theta[j, i]) <- b0[i] + bb.RCovAS[i]*RCovAS.b[j] +
        bb.RCovES[i]*RCovES.b[j] + bb.RCovPine[i]*RCovPine.b[j] +
        bb.CanCov[i]*ccov.b[j] + bb.ShCov[i]*shcov.b[j] +
        bb.RSC_Con[i]*RSC_Con.b[j] + bb.GHerb[i]*GHerb.b[j] +
        bb.Gwoody[i]*Gwoody.b[j] + bb.GDD[i]*GDD.b[j]
      u[j, i] ~ dbern(theta[j, i]*z[gridID[j], i])
      
      logit(p[j, i]) <- a0[i] + ba.Time[i]*Time.b[j] + ba.Time2[i]*pow(Time.b[j], 2) +
        ba.DOY[i]*DOY.b[j] + ba.DOY2[i]*pow(DOY.b[j], 2) + ba.ccov[i]*ccov.b[j] + ba.shcov[i]*shcov.b[j]
      Y[j, i] ~ dbinom(p[j, i]*u[j, i], TPeriod[j, i])
    }
  }
  
  # Derive species richness at both scales #
  for(k in 1:n.grid) {
    SR.grid[k] <- sum(z[k, ])
  }

  for(j in 1:n.point) {
    SR.point[j] <- sum(u[j, ])
  }
}
